package score;

import sequence.DNASeq;
import sequence.PSeq;

public interface MatrixScorer {


    int min(char a);
    int min(int a);
    static int[][] getStandard(String name, String type) {
        int[][] scores;
        int[] compact;
        if (type.equalsIgnoreCase(DNASeq.TYPE)) {
            switch (name.toUpperCase()) {
                case "BLAST":
                    scores = BLAST;
                    break;
                default:
                    throw new IllegalArgumentException("Invalid name: "+name+" for type: "+type);
            }
            return scores;
        } else if (type.equalsIgnoreCase(PSeq.TYPE)) {
            switch (name.toUpperCase()) {
                case "BLOSUM45":
                    compact = BLOSUM45;
                    break;
                case "BLOSUM50":
                    compact = BLOSUM50;
                    break;
                case "BLOSUM62":
                    compact = BLOSUM62;
                    break;
                case "BLOSUM80":
                    compact = BLOSUM80;
                    break;
                case "BLOSUM90":
                    compact = BLOSUM90;
                    break;
                case "PAM30":
                    compact = PAM30;
                    break;
                case "PAM70":
                    compact = PAM70;
                    break;
                case "PAM250":
                    compact = PAM250;
                    break;
                default:
                    throw new IllegalArgumentException("Invalid name: "+name+" for type: "+type);
            }

            scores = new int[25][25];
            for (int i = 0; i < 25; i++) {
                System.arraycopy(compact, 25*i, scores[i], 0, 25);
            }
            return scores;
        } else {
            throw new IllegalArgumentException("Invalid type: "+type);
        }
    }

    static int[][] getNScoreFromInts(int gg, int aa, int cc, int tt, int ga, int gc, int gt, int ac, int at, int ct) {
        int[][] scores = new int[5][5];

        scores[DNASeq.interpret('G')][DNASeq.interpret('G')] = gg;
        scores[DNASeq.interpret('A')][DNASeq.interpret('A')] = aa;
        scores[DNASeq.interpret('C')][DNASeq.interpret('C')] = cc;
        scores[DNASeq.interpret('T')][DNASeq.interpret('T')] = tt;

        scores[DNASeq.interpret('A')][DNASeq.interpret('G')] =
        scores[DNASeq.interpret('G')][DNASeq.interpret('A')] = ga;
        scores[DNASeq.interpret('G')][DNASeq.interpret('C')] =
        scores[DNASeq.interpret('C')][DNASeq.interpret('G')] = gc;
        scores[DNASeq.interpret('G')][DNASeq.interpret('T')] =
        scores[DNASeq.interpret('T')][DNASeq.interpret('G')] = gt;
        scores[DNASeq.interpret('A')][DNASeq.interpret('C')] =
        scores[DNASeq.interpret('C')][DNASeq.interpret('A')] = ac;
        scores[DNASeq.interpret('A')][DNASeq.interpret('T')] =
        scores[DNASeq.interpret('T')][DNASeq.interpret('A')] = at;
        scores[DNASeq.interpret('C')][DNASeq.interpret('T')] =
        scores[DNASeq.interpret('T')][DNASeq.interpret('C')] = ct;

        for (int i = 0; i < 4; i++) {
            scores[i][4] = scores[4][i] = Math.min(Math.min(scores[i][0], scores[i][1]),
                                                   Math.min(scores[i][2], scores[i][3]));
        }

        scores[4][4] = 1;

        return scores;
    }

    static boolean isScoreMatrixName(String name) {
        switch (name.toUpperCase()) {
            case "BLAST":
                return true;
            case "BLOSUM45":
            case "BLOSUM50":
            case "BLOSUM62":
            case "BLOSUM80":
            case "BLOSUM90":
            case "PAM30":
            case "PAM70":
            case "PAM250":
                return true;
            default:
                return false;
        }
    }

    static boolean isRNAScoreMatrixName(String name) {
        switch (name.toUpperCase()) {
            case "BLAST":
                return true;
            default:
                return false;
        }
    }

    static boolean isDNAScoreMatrixName(String name) {
        switch (name.toUpperCase()) {
            case "BLAST":
                return true;
            default:
                return false;
        }
    }

    static boolean isPScoreMatrixName(String name) {
        switch (name.toUpperCase()) {
            case "BLOSUM45":
            case "BLOSUM50":
            case "BLOSUM62":
            case "BLOSUM80":
            case "BLOSUM90":
            case "PAM30":
            case "PAM70":
            case "PAM250":
                return true;
            default:
                return false;
        }
    }

    String[] DNA_MATRIX_LIST = {"BLAST"};
    String[] P_MATRIX_LIST = {"BLOSUM45", "BLOSUM50", "BLOSUM62", "BLOSUM80", "BLOSUM90", "PAM30", "PAM70", "PAM250"};
    String[] MATRIX_LIST = {"BLAST", "BLOSUM45", "BLOSUM50", "BLOSUM62", "BLOSUM80", "BLOSUM90", "PAM30", "PAM70", "PAM250"};
    int[][] BLAST = {{5, -4, -4, -4, -4},
                     {-4, 5, -4, -4, -4},
                     {-4, -4, 5, -4, -4},
                     {-4, -4, -4, 5, -4},
                     {-4, -4, -4, -4, 1}};
    int[] BLOSUM45 = {
            /*       A,  R,  N,  D,  C,  Q,  E,  G,  H,  I,  L,  K,  M,
             F,  P,  S,  T,  W,  Y,  V,  B,  J,  Z,  X,  *        */
    /*A*/    5, -2, -1, -2, -1, -1, -1,  0, -2, -1, -1, -1, -1,
            -2, -1,  1,  0, -2, -2,  0, -1, -1, -1, -1, -5,
    /*R*/   -2,  7,  0, -1, -3,  1,  0, -2,  0, -3, -2,  3, -1,
            -2, -2, -1, -1, -2, -1, -2, -1, -3,  1, -1, -5,
    /*N*/   -1,  0,  6,  2, -2,  0,  0,  0,  1, -2, -3,  0, -2,
            -2, -2,  1,  0, -4, -2, -3,  5, -3,  0, -1, -5,
    /*D*/   -2, -1,  2,  7, -3,  0,  2, -1,  0, -4, -3,  0, -3,
            -4, -1,  0, -1, -4, -2, -3,  6, -3,  1, -1, -5,
    /*C*/   -1, -3, -2, -3, 12, -3, -3, -3, -3, -3, -2, -3, -2,
            -2, -4, -1, -1, -5, -3, -1, -2, -2, -3, -1, -5,
    /*Q*/   -1,  1,  0,  0, -3,  6,  2, -2,  1, -2, -2,  1,  0,
            -4, -1,  0, -1, -2, -1, -3,  0, -2,  4, -1, -5,
    /*E*/   -1,  0,  0,  2, -3,  2,  6, -2,  0, -3, -2,  1, -2,
            -3,  0,  0, -1, -3, -2, -3,  1, -3,  5, -1, -5,
    /*G*/    0, -2,  0, -1, -3, -2, -2,  7, -2, -4, -3, -2, -2,
            -3, -2,  0, -2, -2, -3, -3, -1, -4, -2, -1, -5,
    /*H*/   -2,  0,  1,  0, -3,  1,  0, -2, 10, -3, -2, -1,  0,
            -2, -2, -1, -2, -3,  2, -3,  0, -2,  0, -1, -5,
    /*I*/   -1, -3, -2, -4, -3, -2, -3, -4, -3,  5,  2, -3,  2,
            0, -2, -2, -1, -2,  0,  3, -3,  4, -3, -1, -5,
    /*L*/   -1, -2, -3, -3, -2, -2, -2, -3, -2,  2,  5, -3,  2,
            1, -3, -3, -1, -2,  0,  1, -3,  4, -2, -1, -5,
    /*K*/   -1,  3,  0,  0, -3,  1,  1, -2, -1, -3, -3,  5, -1,
            -3, -1, -1, -1, -2, -1, -2,  0, -3,  1, -1, -5,
    /*M*/   -1, -1, -2, -3, -2,  0, -2, -2,  0,  2,  2, -1,  6,
            0, -2, -2, -1, -2,  0,  1, -2,  2, -1, -1, -5,
    /*F*/   -2, -2, -2, -4, -2, -4, -3, -3, -2,  0,  1, -3,  0,
            8, -3, -2, -1,  1,  3,  0, -3,  1, -3, -1, -5,
    /*P*/   -1, -2, -2, -1, -4, -1,  0, -2, -2, -2, -3, -1, -2,
            -3,  9, -1, -1, -3, -3, -3, -2, -3, -1, -1, -5,
    /*S*/    1, -1,  1,  0, -1,  0,  0,  0, -1, -2, -3, -1, -2,
            -2, -1,  4,  2, -4, -2, -1,  0, -2,  0, -1, -5,
    /*T*/    0, -1,  0, -1, -1, -1, -1, -2, -2, -1, -1, -1, -1,
            -1, -1,  2,  5, -3, -1,  0,  0, -1, -1, -1, -5,
    /*W*/   -2, -2, -4, -4, -5, -2, -3, -2, -3, -2, -2, -2, -2,
            1, -3, -4, -3, 15,  3, -3, -4, -2, -2, -1, -5,
    /*Y*/   -2, -1, -2, -2, -3, -1, -2, -3,  2,  0,  0, -1,  0,
            3, -3, -2, -1,  3,  8, -1, -2,  0, -2, -1, -5,
    /*V*/    0, -2, -3, -3, -1, -3, -3, -3, -3,  3,  1, -2,  1,
            0, -3, -1,  0, -3, -1,  5, -3,  2, -3, -1, -5,
    /*B*/   -1, -1,  5,  6, -2,  0,  1, -1,  0, -3, -3,  0, -2,
            -3, -2,  0,  0, -4, -2, -3,  5, -3,  1, -1, -5,
    /*J*/   -1, -3, -3, -3, -2, -2, -3, -4, -2,  4,  4, -3,  2,
            1, -3, -2, -1, -2,  0,  2, -3,  4, -2, -1, -5,
    /*Z*/   -1,  1,  0,  1, -3,  4,  5, -2,  0, -3, -2,  1, -1,
            -3, -1,  0, -1, -2, -2, -3,  1, -2,  5, -1, -5,
    /*X*/   -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
            -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -5,
    /* **/  -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5,
            -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5,  1};

    int[] BLOSUM50 = {
    /*       A,  R,  N,  D,  C,  Q,  E,  G,  H,  I,  L,  K,  M,
             F,  P,  S,  T,  W,  Y,  V,  B,  J,  Z,  X,  *        */
    /*A*/    5, -2, -1, -2, -1, -1, -1,  0, -2, -1, -2, -1, -1,
                     -3, -1,  1,  0, -3, -2,  0, -2, -2, -1, -1, -5,
    /*R*/   -2,  7, -1, -2, -4,  1,  0, -3,  0, -4, -3,  3, -2,
                     -3, -3, -1, -1, -3, -1, -3, -1, -3,  0, -1, -5,
    /*N*/   -1, -1,  7,  2, -2,  0,  0,  0,  1, -3, -4,  0, -2,
                     -4, -2,  1,  0, -4, -2, -3,  5, -4,  0, -1, -5,
    /*D*/   -2, -2,  2,  8, -4,  0,  2, -1, -1, -4, -4, -1, -4,
                     -5, -1,  0, -1, -5, -3, -4,  6, -4,  1, -1, -5,
    /*C*/   -1, -4, -2, -4, 13, -3, -3, -3, -3, -2, -2, -3, -2,
                     -2, -4, -1, -1, -5, -3, -1, -3, -2, -3, -1, -5,
    /*Q*/   -1,  1,  0,  0, -3,  7,  2, -2,  1, -3, -2,  2,  0,
                     -4, -1,  0, -1, -1, -1, -3,  0, -3,  4, -1, -5,
    /*E*/   -1,  0,  0,  2, -3,  2,  6, -3,  0, -4, -3,  1, -2,
                     -3, -1, -1, -1, -3, -2, -3,  1, -3,  5, -1, -5,
    /*G*/    0, -3,  0, -1, -3, -2, -3,  8, -2, -4, -4, -2, -3,
                     -4, -2,  0, -2, -3, -3, -4, -1, -4, -2, -1, -5,
    /*H*/   -2,  0,  1, -1, -3,  1,  0, -2, 10, -4, -3,  0, -1,
                     -1, -2, -1, -2, -3,  2, -4,  0, -3,  0, -1, -5,
    /*I*/   -1, -4, -3, -4, -2, -3, -4, -4, -4,  5,  2, -3,  2,
                     0, -3, -3, -1, -3, -1,  4, -4,  4, -3, -1, -5,
    /*L*/   -2, -3, -4, -4, -2, -2, -3, -4, -3,  2,  5, -3,  3,
                     1, -4, -3, -1, -2, -1,  1, -4,  4, -3, -1, -5,
    /*K*/   -1,  3,  0, -1, -3,  2,  1, -2,  0, -3, -3,  6, -2,
                     -4, -1,  0, -1, -3, -2, -3,  0, -3,  1, -1, -5,
    /*M*/   -1, -2, -2, -4, -2,  0, -2, -3, -1,  2,  3, -2,  7,
                     0, -3, -2, -1, -1,  0,  1, -3,  2, -1, -1, -5,
    /*F*/   -3, -3, -4, -5, -2, -4, -3, -4, -1,  0,  1, -4,  0,
                     8, -4, -3, -2,  1,  4, -1, -4,  1, -4, -1, -5,
    /*P*/   -1, -3, -2, -1, -4, -1, -1, -2, -2, -3, -4, -1, -3,
                     -4, 10, -1, -1, -4, -3, -3, -2, -3, -1, -1, -5,
    /*S*/    1, -1,  1,  0, -1,  0, -1,  0, -1, -3, -3,  0, -2,
                     -3, -1,  5,  2, -4, -2, -2,  0, -3,  0, -1, -5,
    /*T*/    0, -1,  0, -1, -1, -1, -1, -2, -2, -1, -1, -1, -1,
                     -2, -1,  2,  5, -3, -2,  0,  0, -1, -1, -1, -5,
    /*W*/   -3, -3, -4, -5, -5, -1, -3, -3, -3, -3, -2, -3, -1,
                     1, -4, -4, -3, 15,  2, -3, -5, -2, -2, -1, -5,
    /*Y*/   -2, -1, -2, -3, -3, -1, -2, -3,  2, -1, -1, -2,  0,
                     4, -3, -2, -2,  2,  8, -1, -3, -1, -2, -1, -5,
    /*V*/    0, -3, -3, -4, -1, -3, -3, -4, -4,  4,  1, -3,  1,
                     -1, -3, -2,  0, -3, -1,  5, -3,  2, -3, -1, -5,
    /*B*/   -2, -1,  5,  6, -3,  0,  1, -1,  0, -4, -4,  0, -3,
                     -4, -2,  0,  0, -5, -3, -3,  6, -4,  1, -1, -5,
    /*J*/   -2, -3, -4, -4, -2, -3, -3, -4, -3,  4,  4, -3,  2,
                     1, -3, -3, -1, -2, -1,  2, -4,  4, -3, -1, -5,
    /*Z*/   -1,  0,  0,  1, -3,  4,  5, -2,  0, -3, -3,  1, -1,
                     -4, -1,  0, -1, -2, -2, -3,  1, -3,  5, -1, -5,
    /*X*/   -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
                     -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -5,
    /* **/   -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5,
                     -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5,  1};

    int[] BLOSUM62 = {
    /*       A,  R,  N,  D,  C,  Q,  E,  G,  H,  I,  L,  K,  M,
             F,  P,  S,  T,  W,  Y,  V,  B,  J,  Z,  X,  *        */
    /*A*/    4, -1, -2, -2,  0, -1, -1,  0, -2, -1, -1, -1, -1,
                     -2, -1,  1,  0, -3, -2,  0, -2, -1, -1, -1, -4,
    /*R*/   -1,  5,  0, -2, -3,  1,  0, -2,  0, -3, -2,  2, -1,
                     -3, -2, -1, -1, -3, -2, -3, -1, -2,  0, -1, -4,
    /*N*/   -2,  0,  6,  1, -3,  0,  0,  0,  1, -3, -3,  0, -2,
                     -3, -2,  1,  0, -4, -2, -3,  4, -3,  0, -1, -4,
    /*D*/   -2, -2,  1,  6, -3,  0,  2, -1, -1, -3, -4, -1, -3,
                     -3, -1,  0, -1, -4, -3, -3,  4, -3,  1, -1, -4,
    /*C*/    0, -3, -3, -3,  9, -3, -4, -3, -3, -1, -1, -3, -1,
                     -2, -3, -1, -1, -2, -2, -1, -3, -1, -3, -1, -4,
    /*Q*/   -1,  1,  0,  0, -3,  5,  2, -2,  0, -3, -2,  1,  0,
                     -3, -1,  0, -1, -2, -1, -2,  0, -2,  4, -1, -4,
    /*E*/   -1,  0,  0,  2, -4,  2,  5, -2,  0, -3, -3,  1, -2,
                     -3, -1,  0, -1, -3, -2, -2,  1, -3,  4, -1, -4,
    /*G*/    0, -2,  0, -1, -3, -2, -2,  6, -2, -4, -4, -2, -3,
                     -3, -2,  0, -2, -2, -3, -3, -1, -4, -2, -1, -4,
    /*H*/   -2,  0,  1, -1, -3,  0,  0, -2,  8, -3, -3, -1, -2,
                     -1, -2, -1, -2, -2,  2, -3,  0, -3,  0, -1, -4,
    /*I*/   -1, -3, -3, -3, -1, -3, -3, -4, -3,  4,  2, -3,  1,
                     0, -3, -2, -1, -3, -1,  3, -3,  3, -3, -1, -4,
    /*L*/   -1, -2, -3, -4, -1, -2, -3, -4, -3,  2,  4, -2,  2,
                     0, -3, -2, -1, -2, -1,  1, -4,  3, -3, -1, -4,
    /*K*/   -1,  2,  0, -1, -3,  1,  1, -2, -1, -3, -2,  5, -1,
                     -3, -1,  0, -1, -3, -2, -2,  0, -3,  1, -1, -4,
    /*M*/   -1, -1, -2, -3, -1,  0, -2, -3, -2,  1,  2, -1,  5,
                     0, -2, -1, -1, -1, -1,  1, -3,  2, -1, -1, -4,
    /*F*/   -2, -3, -3, -3, -2, -3, -3, -3, -1,  0,  0, -3,  0,
                     6, -4, -2, -2,  1,  3, -1, -3,  0, -3, -1, -4,
    /*P*/   -1, -2, -2, -1, -3, -1, -1, -2, -2, -3, -3, -1, -2,
                     -4,  7, -1, -1, -4, -3, -2, -2, -3, -1, -1, -4,
    /*S*/    1, -1,  1,  0, -1,  0,  0,  0, -1, -2, -2,  0, -1,
                     -2, -1,  4,  1, -3, -2, -2,  0, -2,  0, -1, -4,
    /*T*/    0, -1,  0, -1, -1, -1, -1, -2, -2, -1, -1, -1, -1,
                     -2, -1,  1,  5, -2, -2,  0, -1, -1, -1, -1, -4,
    /*W*/   -3, -3, -4, -4, -2, -2, -3, -2, -2, -3, -2, -3, -1,
                     1, -4, -3, -2, 11,  2, -3, -4, -2, -2, -1, -4,
    /*Y*/   -2, -2, -2, -3, -2, -1, -2, -3,  2, -1, -1, -2, -1,
                     3, -3, -2, -2,  2,  7, -1, -3, -1, -2, -1, -4,
    /*V*/    0, -3, -3, -3, -1, -2, -2, -3, -3,  3,  1, -2,  1,
                     -1, -2, -2,  0, -3, -1,  4, -3,  2, -2, -1, -4,
    /*B*/   -2, -1,  4,  4, -3,  0,  1, -1,  0, -3, -4,  0, -3,
                     -3, -2,  0, -1, -4, -3, -3,  4, -3,  0, -1, -4,
    /*J*/   -1, -2, -3, -3, -1, -2, -3, -4, -3,  3,  3, -3,  2,
                     0, -3, -2, -1, -2, -1,  2, -3,  3, -3, -1, -4,
    /*Z*/   -1,  0,  0,  1, -3,  4,  4, -2,  0, -3, -3,  1, -1,
                     -3, -1,  0, -1, -2, -2, -2,  0, -3,  4, -1, -4,
    /*X*/   -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
                     -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -4,
    /* **/  -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4,
                     -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4,  1};

    int[] BLOSUM80 = {
    /*       A,  R,  N,  D,  C,  Q,  E,  G,  H,  I,  L,  K,  M,
             F,  P,  S,  T,  W,  Y,  V,  B,  J,  Z,  X,  *        */
    /*A*/    5, -2, -2, -2, -1, -1, -1,  0, -2, -2, -2, -1, -1,
                     -3, -1,  1,  0, -3, -2,  0, -2, -2, -1, -1, -6,
    /*R*/   -2,  6, -1, -2, -4,  1, -1, -3,  0, -3, -3,  2, -2,
                     -4, -2, -1, -1, -4, -3, -3, -1, -3,  0, -1, -6,
    /*N*/   -2, -1,  6,  1, -3,  0, -1, -1,  0, -4, -4,  0, -3,
                     -4, -3,  0,  0, -4, -3, -4,  5, -4,  0, -1, -6,
    /*D*/   -2, -2,  1,  6, -4, -1,  1, -2, -2, -4, -5, -1, -4,
                     -4, -2, -1, -1, -6, -4, -4,  5, -5,  1, -1, -6,
    /*C*/   -1, -4, -3, -4,  9, -4, -5, -4, -4, -2, -2, -4, -2,
                     -3, -4, -2, -1, -3, -3, -1, -4, -2, -4, -1, -6,
    /*Q*/   -1,  1,  0, -1, -4,  6,  2, -2,  1, -3, -3,  1,  0,
                     -4, -2,  0, -1, -3, -2, -3,  0, -3,  4, -1, -6,
    /*E*/   -1, -1, -1,  1, -5,  2,  6, -3,  0, -4, -4,  1, -2,
                     -4, -2,  0, -1, -4, -3, -3,  1, -4,  5, -1, -6,
    /*G*/    0, -3, -1, -2, -4, -2, -3,  6, -3, -5, -4, -2, -4,
                     -4, -3, -1, -2, -4, -4, -4, -1, -5, -3, -1, -6,
    /*H*/   -2,  0,  0, -2, -4,  1,  0, -3,  8, -4, -3, -1, -2,
                     -2, -3, -1, -2, -3,  2, -4, -1, -4,  0, -1, -6,
    /*I*/   -2, -3, -4, -4, -2, -3, -4, -5, -4,  5,  1, -3,  1,
                     -1, -4, -3, -1, -3, -2,  3, -4,  3, -4, -1, -6,
    /*L*/   -2, -3, -4, -5, -2, -3, -4, -4, -3,  1,  4, -3,  2,
                     0, -3, -3, -2, -2, -2,  1, -4,  3, -3, -1, -6,
    /*K*/   -1,  2,  0, -1, -4,  1,  1, -2, -1, -3, -3,  5, -2,
                     -4, -1, -1, -1, -4, -3, -3, -1, -3,  1, -1, -6,
    /*M*/   -1, -2, -3, -4, -2,  0, -2, -4, -2,  1,  2, -2,  6,
                     0, -3, -2, -1, -2, -2,  1, -3,  2, -1, -1, -6,
    /*F*/   -3, -4, -4, -4, -3, -4, -4, -4, -2, -1,  0, -4,  0,
                     6, -4, -3, -2,  0,  3, -1, -4,  0, -4, -1, -6,
    /*P*/   -1, -2, -3, -2, -4, -2, -2, -3, -3, -4, -3, -1, -3,
                     -4,  8, -1, -2, -5, -4, -3, -2, -4, -2, -1, -6,
    /*S*/    1, -1,  0, -1, -2,  0,  0, -1, -1, -3, -3, -1, -2,
                     -3, -1,  5,  1, -4, -2, -2,  0, -3,  0, -1, -6,
    /*T*/    0, -1,  0, -1, -1, -1, -1, -2, -2, -1, -2, -1, -1,
                     -2, -2,  1,  5, -4, -2,  0, -1, -1, -1, -1, -6,
    /*W*/   -3, -4, -4, -6, -3, -3, -4, -4, -3, -3, -2, -4, -2,
                     0, -5, -4, -4, 11,  2, -3, -5, -3, -3, -1, -6,
    /*Y*/   -2, -3, -3, -4, -3, -2, -3, -4,  2, -2, -2, -3, -2,
                     3, -4, -2, -2,  2,  7, -2, -3, -2, -3, -1, -6,
    /*V*/    0, -3, -4, -4, -1, -3, -3, -4, -4,  3,  1, -3,  1,
                     -1, -3, -2,  0, -3, -2,  4, -4,  2, -3, -1, -6,
    /*B*/   -2, -1,  5,  5, -4,  0,  1, -1, -1, -4, -4, -1, -3,
                     -4, -2,  0, -1, -5, -3, -4,  5, -4,  0, -1, -6,
    /*J*/   -2, -3, -4, -5, -2, -3, -4, -5, -4,  3,  3, -3,  2,
                     0, -4, -3, -1, -3, -2,  2, -4,  3, -3, -1, -6,
    /*Z*/   -1,  0,  0,  1, -4,  4,  5, -3,  0, -4, -3,  1, -1,
                     -4, -2,  0, -1, -3, -3, -3,  0, -3,  5, -1, -6,
    /*X*/   -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
                     -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -6,
    /* **/  -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6,
                     -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6,  1};

    int[] BLOSUM90 = {
    /*       A,  R,  N,  D,  C,  Q,  E,  G,  H,  I,  L,  K,  M,
             F,  P,  S,  T,  W,  Y,  V,  B,  J,  Z,  X,  *        */
    /*A*/    5, -2, -2, -3, -1, -1, -1,  0, -2, -2, -2, -1, -2,
                     -3, -1,  1,  0, -4, -3, -1, -2, -2, -1, -1, -6,
    /*R*/   -2,  6, -1, -3, -5,  1, -1, -3,  0, -4, -3,  2, -2,
                     -4, -3, -1, -2, -4, -3, -3, -2, -3,  0, -1, -6,
    /*N*/   -2, -1,  7,  1, -4,  0, -1, -1,  0, -4, -4,  0, -3,
                     -4, -3,  0,  0, -5, -3, -4,  5, -4, -1, -1, -6,
    /*D*/   -3, -3,  1,  7, -5, -1,  1, -2, -2, -5, -5, -1, -4,
                     -5, -3, -1, -2, -6, -4, -5,  5, -5,  1, -1, -6,
    /*C*/   -1, -5, -4, -5,  9, -4, -6, -4, -5, -2, -2, -4, -2,
                     -3, -4, -2, -2, -4, -4, -2, -4, -2, -5, -1, -6,
    /*Q*/   -1,  1,  0, -1, -4,  7,  2, -3,  1, -4, -3,  1,  0,
                     -4, -2, -1, -1, -3, -3, -3, -1, -3,  5, -1, -6,
    /*E*/   -1, -1, -1,  1, -6,  2,  6, -3, -1, -4, -4,  0, -3,
                     -5, -2, -1, -1, -5, -4, -3,  1, -4,  5, -1, -6,
    /*G*/    0, -3, -1, -2, -4, -3, -3,  6, -3, -5, -5, -2, -4,
                     -5, -3, -1, -3, -4, -5, -5, -2, -5, -3, -1, -6,
    /*H*/   -2,  0,  0, -2, -5,  1, -1, -3,  8, -4, -4, -1, -3,
                     -2, -3, -2, -2, -3,  1, -4, -1, -4,  0, -1, -6,
    /*I*/   -2, -4, -4, -5, -2, -4, -4, -5, -4,  5,  1, -4,  1,
                     -1, -4, -3, -1, -4, -2,  3, -5,  3, -4, -1, -6,
    /*L*/   -2, -3, -4, -5, -2, -3, -4, -5, -4,  1,  5, -3,  2,
                     0, -4, -3, -2, -3, -2,  0, -5,  4, -4, -1, -6,
    /*K*/   -1,  2,  0, -1, -4,  1,  0, -2, -1, -4, -3,  6, -2,
                     -4, -2, -1, -1, -5, -3, -3, -1, -3,  1, -1, -6,
    /*M*/   -2, -2, -3, -4, -2,  0, -3, -4, -3,  1,  2, -2,  7,
                     -1, -3, -2, -1, -2, -2,  0, -4,  2, -2, -1, -6,
    /*F*/   -3, -4, -4, -5, -3, -4, -5, -5, -2, -1,  0, -4, -1,
                     7, -4, -3, -3,  0,  3, -2, -4,  0, -4, -1, -6,
    /*P*/   -1, -3, -3, -3, -4, -2, -2, -3, -3, -4, -4, -2, -3,
                     -4,  8, -2, -2, -5, -4, -3, -3, -4, -2, -1, -6,
    /*S*/    1, -1,  0, -1, -2, -1, -1, -1, -2, -3, -3, -1, -2,
                     -3, -2,  5,  1, -4, -3, -2,  0, -3, -1, -1, -6,
    /*T*/    0, -2,  0, -2, -2, -1, -1, -3, -2, -1, -2, -1, -1,
                     -3, -2,  1,  6, -4, -2, -1, -1, -2, -1, -1, -6,
    /*W*/   -4, -4, -5, -6, -4, -3, -5, -4, -3, -4, -3, -5, -2,
                     0, -5, -4, -4, 11,  2, -3, -6, -3, -4, -1, -6,
    /*Y*/   -3, -3, -3, -4, -4, -3, -4, -5,  1, -2, -2, -3, -2,
                     3, -4, -3, -2,  2,  8, -3, -4, -2, -3, -1, -6,
    /*V*/   -1, -3, -4, -5, -2, -3, -3, -5, -4,  3,  0, -3,  0,
                     -2, -3, -2, -1, -3, -3,  5, -4,  1, -3, -1, -6,
    /*B*/   -2, -2,  5,  5, -4, -1,  1, -2, -1, -5, -5, -1, -4,
                     -4, -3,  0, -1, -6, -4, -4,  5, -5,  0, -1, -6,
    /*J*/   -2, -3, -4, -5, -2, -3, -4, -5, -4,  3,  4, -3,  2,
                     0, -4, -3, -2, -3, -2,  1, -5,  4, -4, -1, -6,
    /*Z*/   -1,  0, -1,  1, -5,  5,  5, -3,  0, -4, -4,  1, -2,
                     -4, -2, -1, -1, -4, -3, -3,  0, -4,  5, -1, -6,
    /*X*/   -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
                     -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -6,
    /* **/  -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6,
                     -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6,  1};

    int[] PAM30 = {
    /*       A,  R,  N,  D,  C,  Q,  E,  G,  H,  I,  L,  K,  M,
             F,  P,  S,  T,  W,  Y,  V,  B,  J,  Z,  X,  *        */
    /*A*/    6, -7, -4, -3, -6, -4, -2, -2, -7, -5, -6, -7, -5,
                     -8, -2,  0, -1,-13, -8, -2, -3, -6, -3, -1,-17,
    /*R*/   -7,  8, -6,-10, -8, -2, -9, -9, -2, -5, -8,  0, -4,
                     -9, -4, -3, -6, -2,-10, -8, -7, -7, -4, -1,-17,
    /*N*/   -4, -6,  8,  2,-11, -3, -2, -3,  0, -5, -7, -1, -9,
                     -9, -6,  0, -2, -8, -4, -8,  6, -6, -3, -1,-17,
    /*D*/   -3,-10,  2,  8,-14, -2,  2, -3, -4, -7,-12, -4,-11,
                     -15, -8, -4, -5,-15,-11, -8,  6,-10,  1, -1,-17,
    /*C*/   -6, -8,-11,-14, 10,-14,-14, -9, -7, -6,-15,-14,-13,
                     -13, -8, -3, -8,-15, -4, -6,-12, -9,-14, -1,-17,
    /*Q*/   -4, -2, -3, -2,-14,  8,  1, -7,  1, -8, -5, -3, -4,
                     -13, -3, -5, -5,-13,-12, -7, -3, -5,  6, -1,-17,
    /*E*/   -2, -9, -2,  2,-14,  1,  8, -4, -5, -5, -9, -4, -7,
                     -14, -5, -4, -6,-17, -8, -6,  1, -7,  6, -1,-17,
    /*G*/   -2, -9, -3, -3, -9, -7, -4,  6, -9,-11,-10, -7, -8,
                     -9, -6, -2, -6,-15,-14, -5, -3,-10, -5, -1,-17,
    /*H*/   -7, -2,  0, -4, -7,  1, -5, -9,  9, -9, -6, -6,-10,
                     -6, -4, -6, -7, -7, -3, -6, -1, -7, -1, -1,-17,
    /*I*/   -5, -5, -5, -7, -6, -8, -5,-11, -9,  8, -1, -6, -1,
                     -2, -8, -7, -2,-14, -6,  2, -6,  5, -6, -1,-17,
    /*L*/   -6, -8, -7,-12,-15, -5, -9,-10, -6, -1,  7, -8,  1,
                     -3, -7, -8, -7, -6, -7, -2, -9,  6, -7, -1,-17,
    /*K*/   -7,  0, -1, -4,-14, -3, -4, -7, -6, -6, -8,  7, -2,
                     -14, -6, -4, -3,-12, -9, -9, -2, -7, -4, -1,-17,
    /*M*/   -5, -4, -9,-11,-13, -4, -7, -8,-10, -1,  1, -2, 11,
                     -4, -8, -5, -4,-13,-11, -1,-10,  0, -5, -1,-17,
    /*F*/   -8, -9, -9,-15,-13,-13,-14, -9, -6, -2, -3,-14, -4,
                     9,-10, -6, -9, -4,  2, -8,-10, -2,-13, -1,-17,
    /*P*/   -2, -4, -6, -8, -8, -3, -5, -6, -4, -8, -7, -6, -8,
                     -10,  8, -2, -4,-14,-13, -6, -7, -7, -4, -1,-17,
    /*S*/    0, -3,  0, -4, -3, -5, -4, -2, -6, -7, -8, -4, -5,
                     -6, -2,  6,  0, -5, -7, -6, -1, -8, -5, -1,-17,
    /*T*/   -1, -6, -2, -5, -8, -5, -6, -6, -7, -2, -7, -3, -4,
                     -9, -4,  0,  7,-13, -6, -3, -3, -5, -6, -1,-17,
    /*W*/  -13, -2, -8,-15,-15,-13,-17,-15, -7,-14, -6,-12,-13,
                     -4,-14, -5,-13, 13, -5,-15,-10, -7,-14, -1,-17,
    /*Y*/   -8,-10, -4,-11, -4,-12, -8,-14, -3, -6, -7, -9,-11,
                     2,-13, -7, -6, -5, 10, -7, -6, -7, -9, -1,-17,
    /*V*/   -2, -8, -8, -8, -6, -7, -6, -5, -6,  2, -2, -9, -1,
                     -8, -6, -6, -3,-15, -7,  7, -8,  0, -6, -1,-17,
    /*B*/   -3, -7,  6,  6,-12, -3,  1, -3, -1, -6, -9, -2,-10,
                     -10, -7, -1, -3,-10, -6, -8,  6, -8,  0, -1,-17,
    /*J*/   -6, -7, -6,-10, -9, -5, -7,-10, -7,  5,  6, -7,  0,
                     -2, -7, -8, -5, -7, -7,  0, -8,  6, -6, -1,-17,
    /*Z*/   -3, -4, -3,  1,-14,  6,  6, -5, -1, -6, -7, -4, -5,
                     -13, -4, -5, -6,-14, -9, -6,  0, -6,  6, -1,-17,
    /*X*/   -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
                     -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,-17,
    /* **/ -17,-17,-17,-17,-17,-17,-17,-17,-17,-17,-17,-17,-17,
                     -17,-17,-17,-17,-17,-17,-17,-17,-17,-17,-17,  1};

    int[] PAM70 = {
    /*       A,  R,  N,  D,  C,  Q,  E,  G,  H,  I,  L,  K,  M,
             F,  P,  S,  T,  W,  Y,  V,  B,  J,  Z,  X,  *        */
    /*A*/    5, -4, -2, -1, -4, -2, -1,  0, -4, -2, -4, -4, -3,
                     -6,  0,  1,  1, -9, -5, -1, -1, -3, -1, -1,-11,
    /*R*/   -4,  8, -3, -6, -5,  0, -5, -6,  0, -3, -6,  2, -2,
                     -7, -2, -1, -4,  0, -7, -5, -4, -5, -2, -1,-11,
    /*N*/   -2, -3,  6,  3, -7, -1,  0, -1,  1, -3, -5,  0, -5,
                     -6, -3,  1,  0, -6, -3, -5,  5, -4, -1, -1,-11,
    /*D*/   -1, -6,  3,  6, -9,  0,  3, -1, -1, -5, -8, -2, -7,
                     -10, -4, -1, -2,-10, -7, -5,  5, -7,  2, -1,-11,
    /*C*/   -4, -5, -7, -9,  9, -9, -9, -6, -5, -4,-10, -9, -9,
                     -8, -5, -1, -5,-11, -2, -4, -8, -7, -9, -1,-11,
    /*Q*/   -2,  0, -1,  0, -9,  7,  2, -4,  2, -5, -3, -1, -2,
                     -9, -1, -3, -3, -8, -8, -4, -1, -3,  5, -1,-11,
    /*E*/   -1, -5,  0,  3, -9,  2,  6, -2, -2, -4, -6, -2, -4,
                     -9, -3, -2, -3,-11, -6, -4,  2, -5,  5, -1,-11,
    /*G*/    0, -6, -1, -1, -6, -4, -2,  6, -6, -6, -7, -5, -6,
                     -7, -3,  0, -3,-10, -9, -3, -1, -7, -3, -1,-11,
    /*H*/   -4,  0,  1, -1, -5,  2, -2, -6,  8, -6, -4, -3, -6,
                     -4, -2, -3, -4, -5, -1, -4,  0, -4,  1, -1,-11,
    /*I*/   -2, -3, -3, -5, -4, -5, -4, -6, -6,  7,  1, -4,  1,
                     0, -5, -4, -1, -9, -4,  3, -4,  4, -4, -1,-11,
    /*L*/   -4, -6, -5, -8,-10, -3, -6, -7, -4,  1,  6, -5,  2,
                     -1, -5, -6, -4, -4, -4,  0, -6,  5, -4, -1,-11,
    /*K*/   -4,  2,  0, -2, -9, -1, -2, -5, -3, -4, -5,  6,  0,
                     -9, -4, -2, -1, -7, -7, -6, -1, -5, -2, -1,-11,
    /*M*/   -3, -2, -5, -7, -9, -2, -4, -6, -6,  1,  2,  0, 10,
                     -2, -5, -3, -2, -8, -7,  0, -6,  2, -3, -1,-11,
    /*F*/   -6, -7, -6,-10, -8, -9, -9, -7, -4,  0, -1, -9, -2,
                     8, -7, -4, -6, -2,  4, -5, -7, -1, -9, -1,-11,
    /*P*/    0, -2, -3, -4, -5, -1, -3, -3, -2, -5, -5, -4, -5,
                     -7,  7,  0, -2, -9, -9, -3, -4, -5, -2, -1,-11,
    /*S*/    1, -1,  1, -1, -1, -3, -2,  0, -3, -4, -6, -2, -3,
                     -4,  0,  5,  2, -3, -5, -3,  0, -5, -2, -1,-11,
    /*T*/    1, -4,  0, -2, -5, -3, -3, -3, -4, -1, -4, -1, -2,
                     -6, -2,  2,  6, -8, -4, -1, -1, -3, -3, -1,-11,
    /*W*/   -9,  0, -6,-10,-11, -8,-11,-10, -5, -9, -4, -7, -8,
                     -2, -9, -3, -8, 13, -3,-10, -7, -5,-10, -1,-11,
    /*Y*/   -5, -7, -3, -7, -2, -8, -6, -9, -1, -4, -4, -7, -7,
                     4, -9, -5, -4, -3,  9, -5, -4, -4, -7, -1,-11,
    /*V*/   -1, -5, -5, -5, -4, -4, -4, -3, -4,  3,  0, -6,  0,
                     -5, -3, -3, -1,-10, -5,  6, -5,  1, -4, -1,-11,
    /*B*/   -1, -4,  5,  5, -8, -1,  2, -1,  0, -4, -6, -1, -6,
                     -7, -4,  0, -1, -7, -4, -5,  5, -5,  1, -1,-11,
    /*J*/   -3, -5, -4, -7, -7, -3, -5, -7, -4,  4,  5, -5,  2,
                     -1, -5, -5, -3, -5, -4,  1, -5,  5, -4, -1,-11,
    /*Z*/   -1, -2, -1,  2, -9,  5,  5, -3,  1, -4, -4, -2, -3,
                     -9, -2, -2, -3,-10, -7, -4,  1, -4,  5, -1,-11,
    /*X*/   -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
                     -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,-11,
    /* **/ -11,-11,-11,-11,-11,-11,-11,-11,-11,-11,-11,-11,-11,
                     -11,-11,-11,-11,-11,-11,-11,-11,-11,-11,-11,  1};

    int[] PAM250 = {
    /*       A,  R,  N,  D,  C,  Q,  E,  G,  H,  I,  L,  K,  M,
             F,  P,  S,  T,  W,  Y,  V,  B,  J,  Z,  X,  *        */
    /*A*/    2, -2,  0,  0, -2,  0,  0,  1, -1, -1, -2, -1, -1,
                     -3,  1,  1,  1, -6, -3,  0,  0, -1,  0, -1, -8,
    /*R*/   -2,  6,  0, -1, -4,  1, -1, -3,  2, -2, -3,  3,  0,
                     -4,  0,  0, -1,  2, -4, -2, -1, -3,  0, -1, -8,
    /*N*/    0,  0,  2,  2, -4,  1,  1,  0,  2, -2, -3,  1, -2,
                     -3,  0,  1,  0, -4, -2, -2,  2, -3,  1, -1, -8,
    /*D*/    0, -1,  2,  4, -5,  2,  3,  1,  1, -2, -4,  0, -3,
                     -6, -1,  0,  0, -7, -4, -2,  3, -3,  3, -1, -8,
    /*C*/   -2, -4, -4, -5, 12, -5, -5, -3, -3, -2, -6, -5, -5,
                     -4, -3,  0, -2, -8,  0, -2, -4, -5, -5, -1, -8,
    /*Q*/    0,  1,  1,  2, -5,  4,  2, -1,  3, -2, -2,  1, -1,
                     -5,  0, -1, -1, -5, -4, -2,  1, -2,  3, -1, -8,
    /*E*/    0, -1,  1,  3, -5,  2,  4,  0,  1, -2, -3,  0, -2,
                     -5, -1,  0,  0, -7, -4, -2,  3, -3,  3, -1, -8,
    /*G*/    1, -3,  0,  1, -3, -1,  0,  5, -2, -3, -4, -2, -3,
                     -5,  0,  1,  0, -7, -5, -1,  0, -4,  0, -1, -8,
    /*H*/   -1,  2,  2,  1, -3,  3,  1, -2,  6, -2, -2,  0, -2,
                     -2,  0, -1, -1, -3,  0, -2,  1, -2,  2, -1, -8,
    /*I*/   -1, -2, -2, -2, -2, -2, -2, -3, -2,  5,  2, -2,  2,
                     1, -2, -1,  0, -5, -1,  4, -2,  3, -2, -1, -8,
    /*L*/   -2, -3, -3, -4, -6, -2, -3, -4, -2,  2,  6, -3,  4,
                     2, -3, -3, -2, -2, -1,  2, -3,  5, -3, -1, -8,
    /*K*/   -1,  3,  1,  0, -5,  1,  0, -2,  0, -2, -3,  5,  0,
                     -5, -1,  0,  0, -3, -4, -2,  1, -3,  0, -1, -8,
    /*M*/   -1,  0, -2, -3, -5, -1, -2, -3, -2,  2,  4,  0,  6,
                     0, -2, -2, -1, -4, -2,  2, -2,  3, -2, -1, -8,
    /*F*/   -3, -4, -3, -6, -4, -5, -5, -5, -2,  1,  2, -5,  0,
                     9, -5, -3, -3,  0,  7, -1, -4,  2, -5, -1, -8,
    /*P*/    1,  0,  0, -1, -3,  0, -1,  0,  0, -2, -3, -1, -2,
                     -5,  6,  1,  0, -6, -5, -1, -1, -2,  0, -1, -8,
    /*S*/    1,  0,  1,  0,  0, -1,  0,  1, -1, -1, -3,  0, -2,
                     -3,  1,  2,  1, -2, -3, -1,  0, -2,  0, -1, -8,
    /*T*/    1, -1,  0,  0, -2, -1,  0,  0, -1,  0, -2,  0, -1,
                     -3,  0,  1,  3, -5, -3,  0,  0, -1, -1, -1, -8,
    /*W*/   -6,  2, -4, -7, -8, -5, -7, -7, -3, -5, -2, -3, -4,
                     0, -6, -2, -5, 17,  0, -6, -5, -3, -6, -1, -8,
    /*Y*/   -3, -4, -2, -4,  0, -4, -4, -5,  0, -1, -1, -4, -2,
                     7, -5, -3, -3,  0, 10, -2, -3, -1, -4, -1, -8,
    /*V*/    0, -2, -2, -2, -2, -2, -2, -1, -2,  4,  2, -2,  2,
                     -1, -1, -1,  0, -6, -2,  4, -2,  2, -2, -1, -8,
    /*B*/    0, -1,  2,  3, -4,  1,  3,  0,  1, -2, -3,  1, -2,
                     -4, -1,  0,  0, -5, -3, -2,  3, -3,  2, -1, -8,
    /*J*/   -1, -3, -3, -3, -5, -2, -3, -4, -2,  3,  5, -3,  3,
                     2, -2, -2, -1, -3, -1,  2, -3,  5, -2, -1, -8,
    /*Z*/    0,  0,  1,  3, -5,  3,  3,  0,  2, -2, -3,  0, -2,
                     -5,  0,  0, -1, -6, -4, -2,  2, -2,  3, -1, -8,
    /*X*/   -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
                     -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -8,
    /* **/  -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8,
                     -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8,  1};
}
